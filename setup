#!/bin/bash

# Get the path of the executable:
cd $(dirname $0)
MY_PATH=`pwd`
cd ~-

# Create a new project from scratch, if given a name
if [ $1 ]; then
    echo 'Creating new project ' $1
    laravel new $1
    cd $1
fi

echo $MY_PATH

echo `php artisan env` | grep -q local
if [ $? -ne "0" ]; then
    echo 'Error: You are not running in a Laravel local environment.'
    echo ''
    echo 'This script is not supported for environments other than local.'
    exit 1
fi

# Remove compiled files from version control
rm -rf public/css/*
rm -rf public/js/*

# Set up version control
cp $MY_PATH/files/.gitignore .

git init
git add .
git commit -m 'Initial commit'


# Include utility scripts
cp -r $MY_PATH/bin .

# Set up the directory structure for compiled files
bin/setup


# Set up environment files
if [ ! -f .env ]; then
    # Create the .env file
    cp .env.example .env
fi

# Generate a new key for the project
php artisan key:generate

# Include deployment information
sed -i '/APP_URL/a \
\
DEPLOY_HOST=user@domain\
DEPLOY_PATH=\/home\/user\/path' .env

sed -i '/APP_URL/a \
\
DEPLOY_HOST=user@domain\
DEPLOY_PATH=\/home\/user\/path' .env.example

# Include stripe keys
echo '
STRIPE_KEY=
STRIPE_SECRET=
' >> .env.example

echo '
STRIPE_KEY=
STRIPE_SECRET=
' >> .env


# Set up resource dependencies
sed -i '/scripts/a \        "detail": "cross-env ARG=detail NODE_ENV=development node_modules/webpack/bin/webpack.js --progress --hide-modules --config=node_modules/laravel-mix/setup/webpack.config.js",' package.json
sed -i '/bootstrap-sass/d' package.json
sed -i '/jquery/d' package.json
sed -i '/lodash/d' package.json

yarn add --dev babel-plugin-transform-imports babel-preset-env babel-preset-stage-2 date-fns stylus stylus-loader vee-validate vuetify vuex webpack-bundle-analyzer
cp $MY_PATH/files/webpack.mix.js .
cp $MY_PATH/files/.babelrc .

cp -r $MY_PATH/resources ./resources
cp $MY_PATH/files/app.blade.php ./resources/views/
cp $MY_PATH/files/ExampleComponent.vue ./resources/js/components/

# Load additional composer packages
sed -i '/dont-discover/a \
                "laravel/dusk",\
                "barryvdh/laravel-debugbar"
' composer.json

composer require laracasts/utilities waavi/sanitizer
composer require --dev laravel/dusk barryvdh/laravel-debugbar

sed -i "/function register/{N;a \
\        if (\$this->app->environment('local','testing')) {  \n \
           \$this->app->register(\\\\Laravel\\\\Dusk\\\\DuskServiceProvider::class);  \n \
       }  \n \
       if (\$this->app->environment('local')) {  \n \
           \$this->app->register(\\\\Barryvdh\\\\Debugbar\\\\ServiceProvider::class);  \n \
           if (! class_exists('Debugbar')) {  \n \
               class_alias('Barryvdh\\\\Debugbar\\\\Facade', 'Debugbar');  \n \
           }  \n \
       }
}" app/Providers/AppServiceProvider.php

php artisan dusk:install


# Redirect to https (generally just for deployment)
sed -i '/Handle Front Controller/i \
    # Redirect to https \
    RewriteCond %{HTTPS} !=on \
    RewriteRule ^.*$ https://%{SERVER_NAME}%{REQUEST_URI} [R,L] \
' public/.htaccess

# Create a "memory" database connection
sed -i "0,/'sqlite'/s/sqlite/memory' => \[ \n \
            'driver' => 'sqlite', \n \
            'database' => ':memory:', \n \
        ], \n \
\n        'dusk' => \[ \n \
            'driver' => 'sqlite', \n \
            'database' => database_path('dusk.sqlite'), \n \
        ], \n \
\n        '&/" config/database.php

touch database/dusk.sqlite
cp .env .env.dusk.local
sed -i "/DB_CONNECTION=mysql/DB_CONNECTION=dusk/" .env.dusk.local

# Use the "memory" database connection in phpunit
sed -i '/QUEUE_DRIVER/a \
        <env name="DB_CONNECTION" value="memory"/>' \
phpunit.xml

# Create documentation

touch README.md
touch public/humans.txt

echo 'Release 0.0.1;  Updated:' `date +"%-m/%-d/%Y"` > version.txt

cp version.txt CHANGELOG.md
printf '=%.0s' {1..30} >> CHANGELOG.md
echo 'Initial project setup' >> CHANGELOG.md


# Commit all changes to git repo
git add .
git commit -m 'apply setup script alterations'

# Do some checks at the very end
echo 'Please set your application uri in .env and .env.dusk.local'
echo 'then run the following commands:'
echo ''
echo 'npm run dev'
echo 'phpunit'
echo 'dusk'
